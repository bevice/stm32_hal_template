
# SET(SEMIHOSTING "enable")

# Частота  HSE
# SET(HSE_VALUE 16000000)



# Нужен cmake >=2.6
CMAKE_MINIMUM_REQUIRED(VERSION 2.6)



include(stm32.cmake)

PROJECT(stm32_hal_template)

SET(HAL_ADC_MODULE_ENABLED TRUE)
SET(HAL_CRYP_MODULE_ENABLED TRUE)
SET(HAL_CAN_MODULE_ENABLED TRUE)
SET(HAL_CEC_MODULE_ENABLED TRUE)
SET(HAL_CORTEX_MODULE_ENABLED TRUE)
SET(HAL_CRC_MODULE_ENABLED TRUE)
SET(HAL_DAC_MODULE_ENABLED TRUE)
SET(HAL_DMA_MODULE_ENABLED TRUE)
SET(HAL_ETH_MODULE_ENABLED TRUE)
SET(HAL_FLASH_MODULE_ENABLED TRUE)
SET(HAL_I2C_MODULE_ENABLED TRUE)
SET(HAL_I2S_MODULE_ENABLED TRUE)
SET(HAL_IRDA_MODULE_ENABLED TRUE)
SET(HAL_IWDG_MODULE_ENABLED TRUE)
SET(HAL_NOR_MODULE_ENABLED TRUE)
SET(HAL_NAND_MODULE_ENABLED TRUE)
SET(HAL_PCCARD_MODULE_ENABLED TRUE)
SET(HAL_PCD_MODULE_ENABLED TRUE)
SET(HAL_HCD_MODULE_ENABLED TRUE)
SET(HAL_PWR_MODULE_ENABLED TRUE)
SET(HAL_RCC_MODULE_ENABLED TRUE)
SET(HAL_RTC_MODULE_ENABLED TRUE)
SET(HAL_SD_MODULE_ENABLED TRUE)
SET(HAL_MMC_MODULE_ENABLED TRUE)
SET(HAL_SDRAM_MODULE_ENABLED TRUE)
SET(HAL_SMARTCARD_MODULE_ENABLED TRUE)
SET(HAL_SPI_MODULE_ENABLED TRUE)
SET(HAL_SRAM_MODULE_ENABLED TRUE)
SET(HAL_TIM_MODULE_ENABLED TRUE)
SET(HAL_UART_MODULE_ENABLED TRUE)
SET(HAL_USART_MODULE_ENABLED TRUE)
SET(HAL_WWDG_MODULE_ENABLED TRUE)
SET(HAL_EXTI_MODULE_ENABLED TRUE)
SET(HAL_GPIO_MODULE_ENABLED TRUE)

SET(LL_FSMC_ENABLED TRUE)
SET(LL_SDMMC_ENABLED TRUE)
SET(LL_USB_ENABLED TRUE)
SET(LL_ADC_ENABLED TRUE)
SET(LL_CRC_ENABLED TRUE)
SET(LL_DAC_ENABLED TRUE)
SET(LL_DMA_ENABLED TRUE)
SET(LL_EXTI_ENABLED TRUE)
SET(LL_GPIO_ENABLED TRUE)
SET(LL_I2C_ENABLED TRUE)
SET(LL_PWR_ENABLED TRUE)
SET(LL_RCC_ENABLED TRUE)
SET(LL_RTC_ENABLED TRUE)
SET(LL_SPI_ENABLED TRUE)
SET(LL_TIM_ENABLED TRUE)
SET(LL_USART_ENABLED TRUE)
SET(LL_UTILS_ENABLED TRUE)



include(hal.cmake)
include(baselibc.cmake)

ADD_DEFINITIONS(-DSTM32F103xB)
# Размера флеша
SET(STM32_FLASH_SIZE "64K")
# Размер рамы
SET(STM32_RAM_SIZE "20K")
# Адрес стека - конец оперативки => 0x20000000 + размер оперативки
SET(STM32_STACK_ADDRESS "0x20010000")

# Адреса RAM и Flash
SET(STM32_FLASH_ORIGIN "0x08000000")
SET(STM32_RAM_ORIGIN "0x20000000")


# Стартовый файл
SET(STARTUP_SOURCE
		${STM32_STARTUP}
		${STARTUP_DIR}/stm32/STM32F10X_MD/vectable.c
		)





##################################################################################
# add all sources and headers from ./src
# Исходники проекта 
##################################################################################
file(GLOB_RECURSE SRC_C_FILES ${PROJECT_SOURCE_DIR}/src/*.c)
file(GLOB_RECURSE SRC_H_FILES ${PROJECT_SOURCE_DIR}/src/*.h)

SET(PROJECT_SOURCES
  ${SRC_C_FILES}
  ${SRC_H_FILES}
)

# Флаги компилятора для разных типов сборки.
SET(COMPILE_DEFINITIONS_DEBUG -O0 -g3 -DDEBUG)
SET(COMPILE_DEFINITIONS_RELEASE -Os)
SET(LD_SCRIPT STM32F10X_MD.ld)
SET(LD_SCRIPTS_DIR ${PROJECT_SOURCE_DIR}/stm32-ld-scripts/ )

# Конфигурируем файл - скрипт компилятора: заменяем переменные в файле на размеры и адреса
#CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/stm32_flash.ld.in ${CMAKE_CURRENT_BINARY_DIR}/stm32_flash.ld)
SET(CMAKE_EXE_LINKER_FLAGS "-L${LD_SCRIPTS_DIR} -T${LD_SCRIPT} ${CMAKE_EXE_LINKER_FLAGS}")

# Добавляем пути поиска заголовочных файлов
INCLUDE_DIRECTORIES(
	${PROJECT_SOURCE_DIR}/src/
    ${CMAKE_CURRENT_SOURCE_DIR}/.
	${DRV_INCLUDE_DIRS}

)

# Собираем исходники пректа, модули, и т.д. в elf
ADD_EXECUTABLE(${CMAKE_PROJECT_NAME}.elf
		${STARTUP_SOURCE}
		${STM32_SYSTEM_SOURCE}
		${BASELIBC_C_FILES}
		${BASELIBC_H_FILES}
		${HAL_SOURCES}
		${PROJECT_SOURCES}
		)

# Конвертируем elf в hex и bin

ADD_CUSTOM_COMMAND(TARGET ${CMAKE_PROJECT_NAME}.elf POST_BUILD COMMAND ${CMAKE_OBJCOPY} ARGS -Oihex ${CMAKE_PROJECT_NAME}.elf ${CMAKE_PROJECT_NAME}.hex)
ADD_CUSTOM_COMMAND(TARGET ${CMAKE_PROJECT_NAME}.elf POST_BUILD COMMAND ${CMAKE_OBJCOPY} ARGS -Obinary ${CMAKE_PROJECT_NAME}.elf ${CMAKE_PROJECT_NAME}.bin)
ADD_CUSTOM_COMMAND(TARGET ${CMAKE_PROJECT_NAME}.elf POST_BUILD COMMAND ${CMAKE_SIZE} ARGS --format=sysv ${CMAKE_PROJECT_NAME}.elf )
ADD_CUSTOM_COMMAND(TARGET ${CMAKE_PROJECT_NAME}.elf POST_BUILD COMMAND ${CMAKE_SIZE} ARGS --format=berkeley ${CMAKE_PROJECT_NAME}.elf )


#add_definitions(-include stdint.h)